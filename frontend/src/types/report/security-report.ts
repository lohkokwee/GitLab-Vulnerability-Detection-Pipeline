// CommunicationLevels and ConfigSources can be represented as string union types
type CommunicationLevels = "info" | "warn" | "fatal"
type ConfigSources = "argument" | "file" | "env_variable" | "other"
type FlagTypes = "flagged-as-likely-false-positive"
type SeverityLevels = "Info" | "Unknown" | "Low" | "Medium" | "High" | "Critical"
type ScanStatuses = "success" | "failure"
type ScanTypes = "sast"

interface IBase {}

interface ICommunication extends IBase {
  level: CommunicationLevels
  value: string
}

interface IConfigurationOption extends IBase {
  name: string
  value: boolean | number | string | null
  source?: ConfigSources
}

interface IVendor extends IBase {
  name: string
}

interface IAnalyzer extends IBase {
  id: string
  name: string
  version: string
  vendor: IVendor
  url?: string
}

interface IScanner extends IBase {
  id: string
  name: string
  version: string
  vendor: IVendor
  url?: string
}

interface IIdentifier extends IBase {
  type: string
  name: string
  value: string
  url?: string
}

interface ICVSSVector extends IBase {
  vendor: string
  vector: string
}

interface ILink extends IBase {
  url: string
  name?: string
}

interface ILocation extends IBase {
  file?: string
  start_line?: number
  end_line?: number
  class_name?: string
  method_name?: string
}

interface IFlag extends IBase {
  type: FlagTypes
  origin: string
  description: string
}

interface IVulnerability extends IBase {
  id: string
  name?: string
  description?: string
  severity?: SeverityLevels
  solution?: string
  raw_source_code_extract?: string
  identifiers: IIdentifier[]
  links?: ILink[]
  location: ILocation
  flags?: IFlag[]
  cvss_vectors?: ICVSSVector[]
}

interface IScan extends IBase {
  analyzer: IAnalyzer
  start_time: string
  end_time: string
  scanner: IScanner
  status: ScanStatuses
  type: ScanTypes
  messages?: ICommunication[]
  options?: IConfigurationOption[]
  primary_identifiers?: IIdentifier[]
}

interface IVulnerabilityIdentifier extends IBase {
  id: string
}

interface IRemediation extends IBase {
  fixes: IVulnerabilityIdentifier[]
  summary: string
  diff: string
}

interface ISecurityReport extends IBase {
  version: string
  scan: IScan
  vulnerabilities: IVulnerability[]
  remediations?: IRemediation[]
}

export type {
  IBase,
  ICommunication,
  IConfigurationOption,
  IVendor,
  IAnalyzer,
  IScanner,
  IIdentifier,
  ICVSSVector,
  ILink,
  ILocation,
  IFlag,
  IVulnerability,
  IScan,
  IVulnerabilityIdentifier,
  IRemediation,
  ISecurityReport,
  CommunicationLevels,
  ConfigSources,
  FlagTypes,
  SeverityLevels,
  ScanStatuses,
  ScanTypes,
};
