"use client"

import { notFound } from "next/navigation"

import { JobDataCard } from "@/components/detection/job-data-card"
import { JobStatusScanJobCard } from "@/components/detection/job-status-scan-job-card"
import { PageTitle } from "@/components/shared/animations/page-header"
import { IStatusScanJob } from "@/types/workers-status/status-scan-job"

import { useStatusScanJob } from "@/hooks/use-status-scan-job"
import { useSecurityReport } from "@/hooks/use-security-report"
import { SecurityReportCard } from "@/components/security-report/security-report-card"

const JobPage = ({ params }: { params: { id: string } }) => {
  const {
    statusScanJob,
    isError: isStatusScanJobError,
    error: statusScanJobError,
    isLoading: isStatusScanJobLoading,
  } = useStatusScanJob({ dbJobId: params.id })
  const {
    securityReport,
    isError: isSecurityReportError,
    error: securityReportError,
    isLoading: isSecurityReportLoading
  } = useSecurityReport({ dbJobId: params.id })

  console.log(securityReport)
  
  const renderJobSection = () => {
    if (!isStatusScanJobLoading && statusScanJob !== undefined) return (
      <div className="grid gap-4 md:grid-cols-2">
        <JobDataCard job={statusScanJob.job} />
        <JobStatusScanJobCard statusScanJob={statusScanJob} />
      </div>
    )
    return (
      <></>
    )
  }

  const renderSecurityReportSection = () => {
    if (!isStatusScanJobLoading && statusScanJob !== undefined) return (
      <SecurityReportCard
        securityReport={securityReport}
        isLoading={isSecurityReportLoading}
      />
    )
    return (
      <></>
    )
  }

  if (isStatusScanJobError) return (
    notFound()
  )

  return (
    <div className="space-y-4">
      <PageTitle 
        title={`Job ${params.id}`}
        loadingTitle="Job"
        isLoading={isStatusScanJobLoading || isSecurityReportLoading}
      />
      {renderJobSection()}
      {renderSecurityReportSection()}
    </div>
  )
}

export default JobPage