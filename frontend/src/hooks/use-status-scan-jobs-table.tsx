import * as React from "react"

import {
  ColumnDef,
  ColumnFiltersState,
  SortingState,
  getCoreRowModel,
  getFilteredRowModel,
  getSortedRowModel,
  getFacetedRowModel,
  getFacetedUniqueValues,
  useReactTable,
  type PaginationState
} from "@tanstack/react-table"
import { Skeleton } from "@/components/ui/skeleton"

interface UseDataTableProps<TData, TValue> {
  data: TData[] | undefined
  columns: ColumnDef<TData, TValue>[]
  pagination: PaginationState
  setPagination: React.Dispatch<React.SetStateAction<PaginationState>>
  pageCount: number | undefined
  isLoading: boolean
}

const useStatusScanJobsTable = <TData, TValue>({
  data,
  columns,
  pagination,
  setPagination,
  pageCount,
  isLoading
}: UseDataTableProps<TData, TValue>) => {
  const PLACEHOLDER_ROWS = 10
  const PLACEHOLDER_PAGES = 1
  const [sorting, setSorting] = React.useState<SortingState>([])
  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(
    []
  )

  const renderPageCount: number = React.useMemo(
    () => pageCount == undefined ? PLACEHOLDER_PAGES : pageCount,
    [pageCount]
  ) 

  const table = useReactTable({
    state: {
      sorting,
      columnFilters,
      pagination,
    },
    data: data !== undefined ? data : [],
    columns: columns,
    getCoreRowModel: getCoreRowModel(),
    onSortingChange: setSorting,
    getSortedRowModel: getSortedRowModel(),
    onColumnFiltersChange: setColumnFilters,
    getFilteredRowModel: getFilteredRowModel(),
    getFacetedRowModel: getFacetedRowModel(),
    getFacetedUniqueValues: getFacetedUniqueValues(),
    onPaginationChange: setPagination,
    manualPagination: true,
    autoResetPageIndex: false,
    pageCount: renderPageCount
  })
  
  return { table }
}


export { useStatusScanJobsTable }