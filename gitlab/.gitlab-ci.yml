# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
variables:
  # API_BASE_URL: "https://bdb1-151-192-158-35.ngrok-free.app/api/v1" # Localhost
  API_BASE_URL: "https://gitlab-vulnerability-detection-pipeline.onrender.com/api/v1" # Cloud

stages:
- vulnerability_scan
- report_retrieval

vulnerability-scan-job:
  stage: vulnerability_scan
  variables:
    VULNERABILITY_DETECTION_API: "${API_BASE_URL}/detection/start"
  before_script:
  - apt-get update && apt-get install -y jq
  script:
  - echo "Fetching repository state for runner env..."
  - git fetch --unshallow || true
  - git fetch origin $CI_COMMIT_REF_NAME
  - DIFF=$(git diff $CI_COMMIT_SHA^ --name-only)
  - DIFF_JSON=$(echo "$DIFF" | jq -R -s -c 'split("\n")[:-1] | map(.)')
  - |
    REQUEST_DATA=$(jq -n \
      --arg gl_project_dir "${CI_PROJECT_DIR}" \
      --arg gl_commit_sha "${CI_COMMIT_SHA}" \
      --arg gl_project_id "${CI_PROJECT_ID}" \
      --arg gl_pipeline_id "${CI_PIPELINE_ID}" \
      --arg gl_job_id "${CI_JOB_ID}" \
      --argjson diff "$DIFF_JSON" \
      '{
        "gl_project_dir": $gl_project_dir,
        "gl_commit_sha": $gl_commit_sha,
        "gl_project_id": $gl_project_id,
        "gl_pipeline_id": $gl_pipeline_id,
        "gl_job_id": $gl_job_id,
        "diff": $diff
      }')
  - echo $REQUEST_DATA
  - echo "Sending files to vulnerability detection server..."
  - |
    curl -X POST -H "Content-Type: application/json" \
    --data "$REQUEST_DATA" \
    $VULNERABILITY_DETECTION_API
  - echo "GL_JOB_ID=$CI_JOB_ID" > .jobenv
  artifacts:
    reports:
      dotenv: .jobenv

report-retrieval-job:
  stage: report_retrieval
  variables:
    VULNERABILITY_REPORT_API: "${API_BASE_URL}/report/gl"
  script:
  - echo "Fetching vulnerability report from server..."
  - |
    curl -X GET "${VULNERABILITY_REPORT_API}/get_by_query_id?gl_job_id=${GL_JOB_ID}" \
    -o gl-security-report.json
  - echo "$(<gl-security-report.json)"
  - echo "$(realpath gl-security-report.json)"
  - echo "Job completed."
  rules:
  - when: manual
  artifacts:
    reports:
      sast: gl-security-report.json
