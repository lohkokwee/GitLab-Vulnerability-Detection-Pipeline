from typing import Optional
from sqlalchemy.orm import Session

from app.database.crud.base import get_or_create
from app.database.models import report as models
from app.database.schemas import report as schemas

from app.internal import report # TODO: remove when done

def get_or_create_identifier(db: Session, type: str, name: str, value: str, url: Optional[str]) -> schemas.Identifier:
  db_identifier = get_or_create(db=db, model=models.Identifier, type=type, name=name, value=value, url=url)
  return db_identifier

# def create_vulnerability(db: Session, name: Optional[str], description: Optional[str], severity: )

def get_report_by_gl_job_id(db: Session, gl_job_id: int) -> schemas.SecurityReport:
  # TODO: return actual SecurityReport when CRUD completed
  # return db.query(models.SecurityReport).filter(models.SecurityReport.gl_job_id == gl_job_id).first()
  return report.mock()