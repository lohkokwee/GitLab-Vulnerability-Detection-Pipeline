"""Create SecurityReport foreign key constaints

Revision ID: 3889cf5f5e53
Revises: 9bc63bf2304f
Create Date: 2024-05-11 04:19:51.930421

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3889cf5f5e53'
down_revision: Union[str, None] = '9bc63bf2304f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'analyzers', 'vendors', ['vendor_id'], ['id'])
    op.create_foreign_key(None, 'communications', 'scans', ['scan_id'], ['id'])
    op.create_foreign_key(None, 'configuration_options', 'scans', ['scan_id'], ['id'])
    op.create_foreign_key(None, 'cvss_vectors', 'vendors', ['vendor_id'], ['id'])
    op.create_foreign_key(None, 'flags', 'vulnerabilities', ['vulnerability_id'], ['id'])
    op.create_foreign_key(None, 'identifiers', 'scans', ['scan_id'], ['id'])
    op.create_foreign_key(None, 'identifiers', 'vulnerabilities', ['vulnerability_id'], ['id'])
    op.create_foreign_key(None, 'locations', 'vulnerabilities', ['vulnerability_id'], ['id'])
    op.create_foreign_key(None, 'remediations', 'security_reports', ['security_report_id'], ['id'])
    op.create_foreign_key(None, 'scanners', 'vendors', ['vendor_id'], ['id'])
    op.create_foreign_key(None, 'scans', 'scanners', ['scanner_id'], ['id'])
    op.create_foreign_key(None, 'scans', 'security_reports', ['security_report_id'], ['id'])
    op.create_foreign_key(None, 'scans', 'analyzers', ['analyzer_id'], ['id'])
    op.create_foreign_key(None, 'security_reports', 'scans', ['scan_id'], ['id'])
    op.create_foreign_key(None, 'vulnerabilities', 'security_reports', ['security_report_id'], ['id'])
    op.create_foreign_key(None, 'vulnerability_cvss_vector_association', 'cvss_vectors', ['cvss_vectors_id'], ['id'])
    op.create_foreign_key(None, 'vulnerability_cvss_vector_association', 'vulnerabilities', ['vulnerabilities_id'], ['id'])
    op.create_foreign_key(None, 'vulnerability_identifiers', 'vulnerabilities', ['vulnerability_id'], ['id'])
    op.create_foreign_key(None, 'vulnerability_identifiers', 'remediations', ['remediation_id'], ['id'])
    op.create_foreign_key(None, 'vulnerability_link_association', 'vulnerabilities', ['vulnerabilities_id'], ['id'])
    op.create_foreign_key(None, 'vulnerability_link_association', 'links', ['links_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vulnerability_link_association', type_='foreignkey')
    op.drop_constraint(None, 'vulnerability_link_association', type_='foreignkey')
    op.drop_constraint(None, 'vulnerability_identifiers', type_='foreignkey')
    op.drop_constraint(None, 'vulnerability_identifiers', type_='foreignkey')
    op.drop_constraint(None, 'vulnerability_cvss_vector_association', type_='foreignkey')
    op.drop_constraint(None, 'vulnerability_cvss_vector_association', type_='foreignkey')
    op.drop_constraint(None, 'vulnerabilities', type_='foreignkey')
    op.drop_constraint(None, 'security_reports', type_='foreignkey')
    op.drop_constraint(None, 'scans', type_='foreignkey')
    op.drop_constraint(None, 'scans', type_='foreignkey')
    op.drop_constraint(None, 'scans', type_='foreignkey')
    op.drop_constraint(None, 'scanners', type_='foreignkey')
    op.drop_constraint(None, 'remediations', type_='foreignkey')
    op.drop_constraint(None, 'locations', type_='foreignkey')
    op.drop_constraint(None, 'identifiers', type_='foreignkey')
    op.drop_constraint(None, 'identifiers', type_='foreignkey')
    op.drop_constraint(None, 'flags', type_='foreignkey')
    op.drop_constraint(None, 'cvss_vectors', type_='foreignkey')
    op.drop_constraint(None, 'configuration_options', type_='foreignkey')
    op.drop_constraint(None, 'communications', type_='foreignkey')
    op.drop_constraint(None, 'analyzers', type_='foreignkey')
    # ### end Alembic commands ###
