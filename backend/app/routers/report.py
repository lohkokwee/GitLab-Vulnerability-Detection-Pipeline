from fastapi import APIRouter, Depends
from sqlalchemy.orm import Session
from starlette.status import (
  HTTP_200_OK,
  HTTP_404_NOT_FOUND
)

from app.database.dependency import get_db
from app.database.crud import report as crud
from app.database.schemas import report_base as schemas

REPORT_API_PREFIX = "/report"

router = APIRouter(
  prefix=REPORT_API_PREFIX,
  tags=["Report"],
  responses={
    HTTP_404_NOT_FOUND: {"detail": "Not found"}
  },
)
@router.get("/get_by_gl_job_id/{gl_job_id}", response_model=schemas.SecurityReport, response_model_exclude_none=True, status_code=HTTP_200_OK)
async def get_report(gl_job_id: str, db: Session = Depends(get_db)):
  db_report = crud.get_report_by_gl_job_id(db=db, gl_job_id=gl_job_id)
  if db_report is None:
    raise HTTPException(status_code=HTTP_404_NOT_FOUND, detail=f"Security report with GitLab job id {gl_job_id} not found")
  return db_report