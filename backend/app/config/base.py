from functools import lru_cache
from dotenv import find_dotenv, load_dotenv

from pydantic import Field
from pydantic_settings import BaseSettings, SettingsConfigDict

class Settings(BaseSettings):
  model_config = SettingsConfigDict()

  DB_USER: str
  DB_PASSWORD: str
  DB_NAME: str
  DB_HOST: str

  @property
  def DB_URL(self) -> str:
    """SQLAlchemy Database URL."""
    if self.DB_USER and self.DB_PASSWORD and self.DB_NAME:
      return f"postgresql://{self.DB_USER}:{self.DB_PASSWORD}@{self.DB_HOST}:5432/{self.DB_NAME}"
    return "sqlite+aiosqlite:///db.sqlite3"

  GITLAB_BASE_API_URL: str
  GITLAB_ACCESS_TOKEN: str

@lru_cache
def get_settings():
  load_dotenv(find_dotenv(".env"))
  return Settings()